{"version":3,"sources":["index.js"],"names":["InputArea","className","value","this","props","onChange","cols","rows","React","Component","SearchButton","onClick","disabled","Search","inputText","searchButtonText","searchButtonDisabled","App","state","result","e","target","setState","innerHTML","split","filter","v","forEach","title","search","preventDefault","fetch","then","res","json","items","item","author","volumeInfo","authors","pop","category","categories","error","onChangeInputArea","bind","handleClick","Result","textArea","createRef","current","select","document","execCommand","focus","defaultValue","ref","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.419635f7.chunk.js","sourcesContent":["import './index.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nconst SEARCH_BUTTON_TEXT_DEFAULT = '検索';\nconst SEARCH_BUTTON_TEXT_RUNNING = '検索中...';\nconst MESSAGE_NOT_FOUND = '取得できませんでした';\n\nclass InputArea extends React.Component {\n    render() {\n        return (\n            <form className=\"uk-grid-small uk-grid\">\n                <div className=\"uk-width-1-2@s\">\n                    <textarea\n                        value={this.props.value}\n                        onChange={this.props.onChange(this)}\n                        className=\"uk-textarea\"\n                        cols=\"10\" rows=\"15\">\n                    </textarea>\n                </div>\n            </form>\n        );\n    }\n}\n\nclass SearchButton extends React.Component {\n    render() {\n        return (\n            <button onClick={this.props.onClick(this)} disabled={this.props.disabled}>\n                {this.props.value}\n            </button>\n        );\n    }\n}\n\nclass Search extends React.Component {\n    render() {\n        return (\n            <div>\n                <h1>著者検索</h1>\n                <InputArea \n                    value={this.props.inputText} \n                    onChange={this.props.onChange}\n                />\n                <SearchButton\n                    value={this.props.searchButtonText}\n                    disabled={this.props.searchButtonDisabled}\n                    onClick={this.props.onClick}\n                />\n            </div>\n        );\n    }\n}\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            inputText: '54字の物語',\n            searchButtonText: SEARCH_BUTTON_TEXT_DEFAULT,\n            searchButtonDisabled : false,\n            result: '',\n        };\n    }\n\n    onChangeInputArea(e) {\n        let inputText = e.target.value;\n        this.setState({\n            inputText: inputText,\n            searchButtonDisabled: inputText === '' ? true : false,\n        });\n    }\n\n    handleClick(e) {\n        let searchButtonText = e.target.innerHTML === SEARCH_BUTTON_TEXT_DEFAULT ?\n            SEARCH_BUTTON_TEXT_RUNNING : SEARCH_BUTTON_TEXT_DEFAULT;\n        this.setState({\n            searchButtonText: searchButtonText,\n            searchButtonDisabled: !e.target.disabled,\n            result: '',\n        });\n        // 改行区切りで配列化し、空文字要素を削除\n        let titles = this.state.inputText.split('\\n').filter(v => v);\n        titles.forEach(title => this.search(title));\n        e.preventDefault();\n    }\n\n    search(title) {\n        fetch('https://www.googleapis.com/books/v1/volumes?q=' + title)\n        .then(res => res.json())\n        .then(\n            (json) => {\n                if(!json.items) {\n                    this.setState({\n                        searchButtonText: SEARCH_BUTTON_TEXT_DEFAULT,\n                        searchButtonDisabled: false,\n                        result: '検索結果が0でした',\n                    });\n                    return;\n                }\n                let item = json.items[0];\n                let author = item.volumeInfo.authors ? item.volumeInfo.authors.pop() : MESSAGE_NOT_FOUND;\n                let category = item.volumeInfo.categories ? item.volumeInfo.categories.pop() : MESSAGE_NOT_FOUND;\n                let result = title + '\\t' + author + '\\t' + category + '\\n';\n                this.setState({\n                    searchButtonText: SEARCH_BUTTON_TEXT_DEFAULT,\n                    searchButtonDisabled: false,\n                    result: this.state.result + result,\n                });\n            },\n            (error) => {\n                this.setState({\n                    searchButtonText: SEARCH_BUTTON_TEXT_DEFAULT,\n                    searchButtonDisabled: false\n                });\n            }\n        )\n    }\n\n    render() {\n        return (\n            <div>\n                <Search\n                    inputText={this.state.inputText}\n                    onChange={() => this.onChangeInputArea.bind(this)}\n                    searchButtonText={this.state.searchButtonText}\n                    searchButtonDisabled={this.state.searchButtonDisabled}\n                    onClick={() => this.handleClick.bind(this)}\n                />\n                <hr />\n                <Result result={this.state.result}/>\n            </div>\n        );\n    }\n}\n\nclass Result extends React.Component {\n    constructor(props) {\n        super(props);\n        this.textArea = React.createRef();\n    }\n\n    onClick() {\n        this.textArea.current.select();\n        document.execCommand('copy');\n        this.textArea.current.focus();\n    }\n\n    render() {\n        return (\n            <div>\n                <h1>結果</h1>\n                <form className=\"uk-grid-small uk-grid\">\n                    <div className=\"uk-width-1-2@s\">\n                        <textarea\n                            defaultValue={this.props.result}\n                            ref={this.textArea}\n                            className=\"uk-textarea\"\n                            cols=\"10\" rows=\"15\">\n                        </textarea>\n                    </div>\n                </form>\n                <button onClick={this.onClick.bind(this)}>結果をコピー</button>\n            </div>\n        );\n    }\n}\n\nReactDOM.render(\n    <App />,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}